/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.gmeventas.frame;

import ar.com.gmeventas.entities.Configuracion;
import ar.com.gmeventas.entities.Producto;
import ar.com.gmeventas.entities.ProductoTop;
import ar.com.gmeventas.services.ConfiguracionService;
import ar.com.gmeventas.services.ProductoService;
import ar.com.gmeventas.services.ProductoTopService;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class NuevoProductoPanificadoTopFrame extends javax.swing.JFrame {

    private Producto producto = null;
    private List<Producto> productos = null;
    private DecimalFormat df = new DecimalFormat("#0.00");

    /**
     * Creates new form NuevoProductoTopFrame
     */
    public NuevoProductoPanificadoTopFrame() {
        initComponents();
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        codigoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        filtroTxt = new javax.swing.JTextField();
        v = new javax.swing.JButton();
        comboProductos = new javax.swing.JComboBox<>();
        detalleTxt = new javax.swing.JTextField();
        agregarBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cantidadTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        precioTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("NUEVO PRODUCTO PANIFICADO AUTOMATICO");

        jLabel1.setText("CÃ³digo:");

        codigoTxt.setText("COD");
        codigoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoTxtKeyPressed(evt);
            }
        });

        jLabel2.setText("Nombre:");

        filtroTxt.setText("BUSCAR");
        filtroTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filtroTxtKeyPressed(evt);
            }
        });

        v.setText("Volver");
        v.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vActionPerformed(evt);
            }
        });

        comboProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProductosActionPerformed(evt);
            }
        });
        comboProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboProductosKeyPressed(evt);
            }
        });

        detalleTxt.setText("PRODUCTO");

        agregarBtn.setText("Agregar");
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });
        agregarBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                agregarBtnKeyPressed(evt);
            }
        });

        jLabel3.setText("Cantidad x Venta:");

        cantidadTxt.setText("CAN");
        cantidadTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cantidadTxtKeyPressed(evt);
            }
        });

        jLabel4.setText("Precio:");

        precioTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precioTxt.setText("PRECIO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(agregarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(v))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cantidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(detalleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(filtroTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
                            .addComponent(comboProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(precioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(filtroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detalleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cantidadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(precioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(v)
                    .addComponent(agregarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!codigoTxt.getText().isEmpty()) {
                buscarProducto();
            } else {
                filtroTxt.requestFocus();
            }
        }
    }//GEN-LAST:event_codigoTxtKeyPressed

    private void filtroTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (filtroTxt.getText().isEmpty()) {
                codigoTxt.requestFocus();
            } else {
                String filtro = filtroTxt.getText();
                productos = null;
                try {
                    productos = new ProductoService().getAllProductosOrdenadoByNombre(filtro);
                } catch (Exception ex) {
                    Logger.getLogger(NuevoProductoPanificadoTopFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (productos != null && !productos.isEmpty()) {
                    for (Producto p : productos) {
                        comboProductos.addItem(p.getDetalle());
                    }
                    comboProductos.requestFocus();
                    comboProductos.addFocusListener(null);
                    comboProductos.showPopup();
                }
            }
        }
    }//GEN-LAST:event_filtroTxtKeyPressed

    private void comboProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProductosActionPerformed

//        if (evt.getModifiers() == 16) {
//            int row = comboProductos.getSelectedIndex();
//            if (row < 1) {
//                JOptionPane.showMessageDialog(this, "Debe seleccionar un producto de la lista");
//                return;
//            }
//            producto = productos.get(row - 1);
//            codigoTxt.setText(String.valueOf(producto.getCodigo()));
//            buscarProducto();
//        }
    }//GEN-LAST:event_comboProductosActionPerformed

    private void vActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vActionPerformed
        AbmProductosTopFrame aptf = new AbmProductosTopFrame();
        aptf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_vActionPerformed

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        agregar();
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void comboProductosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboProductosKeyPressed
        if (evt.getKeyCode() == 10) {
            int rw = comboProductos.getSelectedIndex();
            if (rw < 1) {
                return;
            }
            codigoTxt.setText(String.valueOf(productos.get(rw - 1).getCodigo()));
            JOptionPane.showMessageDialog(this, v);
            buscarProducto();
        }
    }//GEN-LAST:event_comboProductosKeyPressed

    private void agregarBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agregarBtnKeyPressed
        if (evt.getKeyCode() == 10) {
            agregar();
        }
    }//GEN-LAST:event_agregarBtnKeyPressed

    private void cantidadTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!cantidadTxt.getText().isEmpty()) {
                agregar();
            }
        }
    }//GEN-LAST:event_cantidadTxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevoProductoPanificadoTopFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarBtn;
    private javax.swing.JTextField cantidadTxt;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JComboBox<String> comboProductos;
    private javax.swing.JTextField detalleTxt;
    private javax.swing.JTextField filtroTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField precioTxt;
    private javax.swing.JButton v;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        codigoTxt.setText("");
        filtroTxt.setText("");
        detalleTxt.setText("");
        detalleTxt.setEditable(false);
        precioTxt.setEditable(false);
        precioTxt.setText("");
        cantidadTxt.setText("");
        comboProductos.removeAllItems();
        comboProductos.addItem("");
        codigoTxt.requestFocus();
    }

    private void buscarProducto() {
        int cod = Integer.valueOf(codigoTxt.getText());
        producto = null;
        Configuracion co = null;
        try {
            producto = new ProductoService().getProductoPanificadoByCodigo(cod);
            co = new ConfiguracionService().getFacturas(1L);
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        Float iva = 0.0F;
        if (co != null) {
            iva = co.getIva() / 100;
        }
        if (producto != null) {
            detalleTxt.setText(producto.getDetalle());
            Double precio = producto.getPrecio() + producto.getImpuesto() + (producto.getPrecio() * iva);
            precioTxt.setText(df.format(precio));
        }else{
            JOptionPane.showMessageDialog(this, "NO EXISTE PRODUCTO");
            return;
        }
        cantidadTxt.requestFocus();
    }

    private void agregar() {
        int cod = producto.getCodigo();
        ProductoTop pt = null;
        try {
            pt = new ProductoTopService().getProductoTopByCodigo(cod);
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        if (pt != null) {
            JOptionPane.showMessageDialog(this, "Producto existente");
            limpiarCampos();
            return;
        } else {
            ProductoTop proEsta = null;
            try {
                proEsta = new ProductoTopService().getProductoTopByCodigo(cod);
            } catch (Exception ex) {
                Logger.getLogger(NuevoProductoPanificadoTopFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (proEsta != null) {
                JOptionPane.showMessageDialog(this, "Producto existente");
                limpiarCampos();
                return;
            }
            ProductoTop pro = new ProductoTop();
            pro.setActivo(true);
            pro.setCodigo(cod);
            pro.setOrden(0);
            pro.setPanificado(producto.getPanificado());
            if (cantidadTxt.getText().isEmpty()) {
                pro.setCantidad(5);
            } else {
                int cant = Integer.valueOf(cantidadTxt.getText());
                pro.setCantidad(cant);
            }
            try {
                new ProductoTopService().saveProductoTop(pro);
            } catch (Exception ex) {
                Logger.getLogger(NuevoProductoPanificadoTopFrame.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Producto agregado correctamente");
            limpiarCampos();
        }
    }
}
